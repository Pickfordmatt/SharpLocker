<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="show.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFYAAABVCAYAAADTwhNZAAABgmlDQ1BzUkdCIElFQzYxOTY2LTIuMQAA
        KM+Vkc8rRFEUxz8zY5AfjaJQFi9hNaMxSmyUmYSSpjHKr83MMz/UzHi9N9Jkq2ynKLHxa8FfwFZZK0Wk
        ZGVhTWyYnvNm1EjNwr3dcz73e+853XMu2MMpNW1UeSGdyeqhMb8yOzev1Dxjx0kr7VRHVEMbCQYnqTg+
        7rBZ/sZj5eJ/o34pZqhgqxUeVjU9KzwuPLmW1SzeFm5Rk5El4VNhty4PFL619GiJXyxOlPjLYj0cCkht
        TcJK4hdHf7Ga1NPCUjld6dSq+vMeq5KGWGZmWnynrA4MQozhR2GCUQIM0MeQ2AE8+OiVHRXivcX4KVYk
        VhWrkUNnmQRJsrhFXZXsMfFx0WMyU+Ss/v/tqxHv95WyN/jB+WSab91QswWFvGl+Hppm4Qgcj3CRKcev
        HMDgu+j5sta1D64NOLssa9EdON+EtgctokeKkkOWPR6H1xNonIPma6hbKPXs55zjewivy1ddwe4e9Mh9
        1+I3+YpntLUiPVYAAAAJcEhZcwAADsQAAA7EAZUrDhsAAALoSURBVHhe7ZnPi01hGMfvTGjUlF+JNIqJ
        TGFnIUkjQxYUjQ1NiiyoiYaUxfwD16+ykCYsFJNisrOQlDQWfpQSkaxsZSI/Ir8+Tz3n9p73vPeam9Wc
        +/3UZ+F5nvfensc57zn3nYoQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEE61Wu3EVbgNB/E03sDLOIwD
        uB67sN2XiRQMaC4ex7f4pwm/4xhuwDb/OMEwVuIIfsXU4JrxGe7Hmf7xrQfNL8E7mBrQ//oej2BrXcE0
        vNGbTw3F/Im2JdzFS2j76l7M9tub+AQ/YGp95lVsjauXRneiDS41iHd4Aud5eUOoa8NevIW/MPWZD7HD
        l5QTGuzBT95w3PwunOalTcPapXgKU58/4mXlg+Zm4Iug2Uy7zf+5F1Iz3fR/1oWa5fgS4+8Z8JJyQWO7
        o0bNQU8nIb8Mz+MjtNcq8zFewBVeVoDcbHyD4Xe9xvK989KU3e5ho9cxeaUSb0d7UH3BcE3oNxzC5LCI
        r8YfGK7Z4ulyQEN2e4YNmj2eLkDOiOvrec6XFSA3GtWOeqoc0ND2qMFxTxUgtw5/B7WTsdeX5yDeF9U9
        9VQ5oKHDUYMXPVWA3POo1p7yh3AhLsADOIFhje2nhW2F2KKgxpzwVDmgoZNRg8OeykF8flRnbvZ0DWJ2
        LhBf1V2erkHM9mp74IV1nZ6e+tDMmai5Y57KQXxrVFf31iU3HtXu8FQO4h+julmemvrQTD/aa1PmJk/l
        IH4QwyGMeaoAuWtR7ZCnchC3/9Twu1vvgIam7Yw1HJadFxRep4jZT9n4R0Cfp0UMw7ED7vg3/1FP1yBm
        D7OwxpzjaZGCAd2OBmbabW9nCbalXPFY6D1fLurBkBZj/MBp5Gfs9uWiEQxqD9Y7Wgy1bWOfLxOTgYGt
        wdRpWOYrXOvlohkYXAfaqZi9Mt3HB3gW7Ypu3b9rCSGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQog0lcpf
        6UXnbiFO5MkAAAAASUVORK5CYII=
</value>
  </data>
</root>